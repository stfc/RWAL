(x0, 1/k)
(x1, alpha0*chi1)
(x2, besseli(m, x1))
(x3, alpha1*chi1)
(x4, besseli(m, x3))
(x5, 1/x4)
(x6, x5*besselk(m, x3))
(x7, -x2*x6 + besselk(m, x1))
(x8, alpha1*chi2)
(x9, besseli(m, x8))
(x10, -x9)
(x11, chi1**2)
(x12, chi2**(-2))
(x13, x11*x12)
(x14, x13*x9)
(x15, -x10 - x14)
(x16, 1/alpha1)
(x17, k*m)
(x18, x16*x17)
(x19, m - 1)
(x20, m + 1)
(x21, besseli(x19, x3) + besseli(x20, x3))
(x22, 1/m)
(x23, mu1*x0*x22)
(x24, omega**2)
(x25, epsilon1*x24/4)
(x26, alpha1*x21**2*x23*x25*x5 - x18*x4/x11)
(x27, 1/chi1)
(x28, 1/mu1)
(x29, 1/x21)
(x30, x28*x29)
(x31, 2*x18*x27*x30/omega)
(x32, x26*x31)
(x33, 1/chi2)
(x34, besseli(x19, x8) + besseli(x20, x8))
(x35, omega/2)
(x36, epsilon1*x35)
(x37, x21*x5)
(x38, chi1*x12*x36*x37)
(x39, -epsilon2*omega*x33*x34/2 + x38*x9)
(x40, -x15*x32 - x39)
(x41, 1/x15)
(x42, besselk(m, x8))
(x43, x13*x42)
(x44, x42 - x43)
(x45, x41*x44)
(x46, besselk(x19, x8) + besselk(x20, x8))
(x47, mu2*x33*x46)
(x48, chi1*x30)
(x49, x4*x48)
(x50, x42 + x47*x49)
(x51, x23*x35)
(x52, x3*x37)
(x53, x41*x52)
(x54, x51*x53)
(x55, x40*x54)
(x56, mu2*x33*x34)
(x57, -x10 - x49*x56)
(x58, x0*x22)
(x59, x56*x58)
(x60, x25*x52)
(x61, -k*m*x12*x16*x9 + x59*x60)
(x62, alpha2*chi2)
(x63, besseli(m, x62))
(x64, besselk(m, x62))
(x65, x64/x63)
(x66, x12*x17/alpha2)
(x67, besseli(x19, x62) + besseli(x20, x62))
(x68, epsilon2*x33*x35)
(x69, (x45*x67*x68 + x68*(besselk(x19, x62) + besselk(x20, x62)))/(alpha1*chi1*epsilon2*mu1*x0*x21*x22*x24*x33*x41*x5*x50*x67/4 - x64*x66 - x65*(epsilon2*x23*x24*x33*x53*x57*x67/4 - x63*x66)))
(x70, x38*x42 + x46*x68)
(x71, x27*x36)
(x72, x2*x5*(x21*x6*x71 + x71*(besselk(x19, x3) + besselk(x20, x3)))/x7)
(x73, x21*x3*x51*x72 + x26)
(x74, x31*x73)
(x75, -x14*x72 - x15*x74 - x39)
(x76, x47*x58)
(x77, alpha1*x11*x35*x72)
(x78, x54*x75)
